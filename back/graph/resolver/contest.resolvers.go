package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"back/graph/generated"
	"back/graph/model"
	"context"
	"fmt"
)

// CreateContest is the resolver for the CreateContest field.
func (r *mutationResolver) CreateContest(ctx context.Context, contest *model.InputContest) (string, error) {
	return r.Contest.CreateContest(ctx, *contest)
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Contests(ctx context.Context) ([]*model.Contest, error) {
	return r.Contest.List(ctx)
}

// GetContestsPlayerTotalResults is the resolver for the GetContestsPlayerTotalResults field.
func (r *queryResolver) GetContestsPlayerTotalResults(ctx context.Context, player string) ([]*model.Contest, error) {
	fmt.Println("This is from contest resolver")
	var test, err = r.Contest.GetContestsPlayerTotalResults(ctx, player)

	fmt.Println("This is from contest rescolver return %+v\n", test)
	return test, err
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
